llm:
  provider: "bedrock"
  model: "anthropic.claude-3-sonnet-20240229-v1:0"
  temperature: 0.7
  max_tokens: 4096
  api_key: "${BEDROCK_API_KEY}"
  region: "us-west-2"

embedding:
  type: "pgvector"
  connection:
    host: "${PGVECTOR_HOST}"
    port: 5432
    database: "${PGVECTOR_DB}"
    user: "${PGVECTOR_USER}"
    password: "${PGVECTOR_PASSWORD}"
  dimension: 1536
  collection_names:
    confluence: "confluence_embeddings"
    databricks: "databricks_schema_embeddings"

database:
  type: "postgresql"
  connection:
    host: "${DB_HOST}"
    port: 5432
    database: "${DB_NAME}"
    user: "${DB_USER}"
    password: "${DB_PASSWORD}"

agents:
  supervisor:
    name: "Supervisor"
    description: "Coordinates between specialized agents"
    max_iterations: 10
    timeout: 300
    group_chat:
      max_round: 10
      roles:
        - name: "Coordinator"
          description: "Analyzes questions and coordinates responses"
        - name: "Synthesizer"
          description: "Combines responses from multiple sources"

  confluence:
    name: "Confluence"
    description: "Searches and analyzes Confluence content"
    connection:
      url: "${CONFLUENCE_URL}"
      username: "${CONFLUENCE_USERNAME}"
      password: "${CONFLUENCE_PASSWORD}"
      space_key: "${CONFLUENCE_SPACE_KEY}"
    group_chat:
      max_round: 8
      roles:
        - name: "ContentExpert"
          description: "Analyzes and understands content"
        - name: "SearchExpert"
          description: "Handles search and retrieval"
        - name: "TextAnalyzer"
          description: "Analyzes user intent"

  databricks:
    name: "Databricks"
    description: "Queries and analyzes Databricks data"
    connection:
      host: "${DATABRICKS_HOST}"
      port: 443
      http_path: "${DATABRICKS_HTTP_PATH}"
      access_token: "${DATABRICKS_ACCESS_TOKEN}"
      schema_cache_ttl: 3600
    group_chat:
      max_round: 8
      roles:
        - name: "SQLExpert"
          description: "Generates and optimizes SQL queries"
        - name: "SchemaExpert"
          description: "Analyzes database schema"
        - name: "QueryValidator"
          description: "Validates query correctness"

  graphql:
    name: "GraphQL"
    description: "Queries and analyzes GraphQL APIs"
    connection:
      endpoint: "${GRAPHQL_ENDPOINT}"
      headers:
        Authorization: "Bearer ${GRAPHQL_TOKEN}"
      schema_cache_ttl: 3600
    group_chat:
      max_round: 8
      roles:
        - name: "SchemaExpert"
          description: "Analyzes GraphQL schema"
        - name: "QueryExpert"
          description: "Generates GraphQL queries"

memory:
  type: "postgresql"
  connection:
    host: "${DB_HOST}"
    port: 5432
    database: "${DB_NAME}"
    user: "${DB_USER}"
    password: "${DB_PASSWORD}"

logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "/var/log/app/app.log"
  max_size: 10485760  # 10MB
  backup_count: 5

api:
  host: "0.0.0.0"
  port: 8000
  debug: false
  workers: 4
  cors_origins: ["https://your-domain.com"]
  timeout: 60
  rate_limit:
    requests_per_minute: 100
    burst: 20

monitoring:
  enabled: true
  metrics_port: 9090
  health_check_interval: 30
  prometheus:
    enabled: true
    path: "/metrics"
  tracing:
    enabled: true
    provider: "jaeger"
    endpoint: "http://jaeger:14268/api/traces" 